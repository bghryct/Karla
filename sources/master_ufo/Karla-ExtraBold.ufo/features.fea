@.RightVertical = [ one H' I M N bracketright d i j l q bar dotlessi Igrave Iacute Icircumflex Idieresis Ntilde igrave iacute icircumflex idieresis ugrave uacute ucircumflex udieresis one.prop zero nine D O Q o p Ograve Oacute Ocircumflex Otilde Odieresis ograve oacute ocircumflex otilde odieresis zero.prop nine.prop ];

@.LeftRounded = [ zero six C G O' Q c e o q Ograve Oacute Ocircumflex Otilde Odieresis egrave eacute ecircumflex edieresis ograve oacute ocircumflex otilde odieresis zero.prop six.prop ];

@.RightRounded = [ zero nine D O' Q o p Ograve Oacute Ocircumflex Otilde Odieresis ograve oacute ocircumflex otilde odieresis zero.prop nine.prop ];

@.VerticalOutstroke = [ h m n' ntilde ];

@.VerticalInstroke = [ U u' Ugrave Uacute Ucircumflex Udieresis ugrave uacute ucircumflex udieresis ];

@.Adiacritics = [ A' Agrave Aacute Acircumflex Atilde Adieresis ];

@.Ediacritics = [ E' Egrave Eacute Ecircumflex Edieresis ];

@.Idiacritics = [ I' Igrave Iacute Icircumflex Idieresis ];

@.Ndiacritics = [ N', Ntilde ];

@.Odiacritics = [ O' Ograve Oacute Ocircumflex Otilde Odieresis ];

@.Udiacritics = [ U' Ugrave Uacute Ucircumflex Udieresis ];

@.adiacritics = [ a' agrave aacute acircumflex atilde adieresis ];

@.ediacritics = [ e' egrave eacute ecircumflex edieresis ];

@.idiacritics = [ i' igrave iacute icircumflex idieresis ];

@.ndiacritics = [ n', ntilde ];

@.odiacritics = [ o' ograve oacute ocircumflex otilde odieresis ];

@.udiacritics = [ u' ugrave uacute ucircumflex udieresis ];

# Prefix: Languagesystems
# automatic
languagesystem DFLT dflt;


feature aalt {
# automatic
feature pnum;
feature tnum;

} aalt;

feature pnum {
# automatic
sub zero.tf by zero;
sub one.tf by one;
sub two.tf by two;
sub three.tf by three;
sub four.tf by four;
sub five.tf by five;
sub six.tf by six;
sub seven.tf by seven;
sub eight.tf by eight;
sub nine.tf by nine;
sub period.tf by period;
sub comma.tf by comma;
sub colon.tf by colon;
sub semicolon.tf by semicolon;
sub exclam.tf by exclam;
sub question.tf by question;
sub asterisk.tf by asterisk;
sub numbersign.tf by numbersign;
sub slash.tf by slash;
sub backslash.tf by backslash;
sub parenleft.tf by parenleft;
sub parenright.tf by parenright;
sub braceleft.tf by braceleft;
sub braceright.tf by braceright;
sub bracketleft.tf by bracketleft;
sub bracketright.tf by bracketright;
sub hyphen.tf by hyphen;
sub underscore.tf by underscore;
sub quotedbl.tf by quotedbl;
sub cent.tf by cent;
sub currency.tf by currency;
sub dollar.tf by dollar;
sub euro.tf by euro;
sub sterling.tf by sterling;
sub yen.tf by yen;
sub plus.tf by plus;
sub minus.tf by minus;
sub multiply.tf by multiply;
sub divide.tf by divide;
sub equal.tf by equal;
sub notequal.tf by notequal;
sub greater.tf by greater;
sub less.tf by less;
sub greaterequal.tf by greaterequal;
sub lessequal.tf by lessequal;
sub plusminus.tf by plusminus;
sub approxequal.tf by approxequal;
sub asciitilde.tf by asciitilde;
sub asciicircum.tf by asciicircum;
sub percent.tf by percent;

} pnum;

feature tnum {
# automatic
sub zero by zero.tf;
sub one by one.tf;
sub two by two.tf;
sub three by three.tf;
sub four by four.tf;
sub five by five.tf;
sub six by six.tf;
sub seven by seven.tf;
sub eight by eight.tf;
sub nine by nine.tf;
sub period by period.tf;
sub comma by comma.tf;
sub colon by colon.tf;
sub semicolon by semicolon.tf;
sub exclam by exclam.tf;
sub question by question.tf;
sub asterisk by asterisk.tf;
sub numbersign by numbersign.tf;
sub slash by slash.tf;
sub backslash by backslash.tf;
sub parenleft by parenleft.tf;
sub parenright by parenright.tf;
sub braceleft by braceleft.tf;
sub braceright by braceright.tf;
sub bracketleft by bracketleft.tf;
sub bracketright by bracketright.tf;
sub hyphen by hyphen.tf;
sub underscore by underscore.tf;
sub quotedbl by quotedbl.tf;
sub cent by cent.tf;
sub currency by currency.tf;
sub dollar by dollar.tf;
sub euro by euro.tf;
sub sterling by sterling.tf;
sub yen by yen.tf;
sub plus by plus.tf;
sub minus by minus.tf;
sub multiply by multiply.tf;
sub divide by divide.tf;
sub equal by equal.tf;
sub notequal by notequal.tf;
sub greater by greater.tf;
sub less by less.tf;
sub greaterequal by greaterequal.tf;
sub lessequal by lessequal.tf;
sub plusminus by plusminus.tf;
sub approxequal by approxequal.tf;
sub asciitilde by asciitilde.tf;
sub asciicircum by asciicircum.tf;
sub percent by percent.tf;

} tnum;

table GDEF {
  # automatic
  GlyphClassDef
    [a e n o u A E I N O U agrave egrave ograve Agrave Egrave ugrave aacute eacute oacute uacute Aacute Eacute Igrave Iacute Ograve Oacute Ugrave Uacute acircumflex ecircumflex ocircumflex ucircumflex Acircumflex Ecircumflex Icircumflex Ocircumflex Ucircumflex adieresis edieresis odieresis udieresis Adieresis Edieresis Idieresis Odieresis Udieresis dotlessi igrave iacute icircumflex idieresis atilde ntilde otilde Atilde Ntilde Otilde], # Base
    , # Liga
    , # Mark
    ;
} GDEF;
